# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    # This parameter defines the codes of the locales (languages) enabled in the application
    app_locales: en
    app.notifications.sender:
        email: noreply@writetf.com
        name: Wrietf
    token_secret: '%env(TOKEN_SECRET)%'
    images_upload_directory: '%kernel.project_dir%/public'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:               # defines the scalar arguments once and apply them to any service defined/created in this file
            $sender: '%app.notifications.sender%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # when the service definition only contains arguments, you can omit the
    # 'arguments' key and define the arguments just below the service class
    App\EventSubscriber\CommentNotificationSubscriber:
        $sender: '%app.notifications.sender%'

    App\Service\ImageUploader:
        arguments:
            $targetDirectory: '%images_upload_directory%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
#            - 'mysql:dbname=mydatabase; host=myhost; port=myport'
#            - { db_username: myuser, db_password: mypassword }
            # If you're using Doctrine & want to re-use that connection, then:
            # comment-out the above 2 lines and uncomment the line below
            - !service { class: PDO, factory: ['@database_connection', 'getWrappedConnection'] }
            # If you get transaction issues (e.g. after login) uncomment the line below
            - { lock_mode: 1 }
